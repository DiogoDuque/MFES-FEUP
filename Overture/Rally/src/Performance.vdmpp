class Performance

instance variables
  private driver: [Driver] := nil;
  private averageSpeed: real := 0.0;
  private time: real := 0.0;
  private penalty: nat := 0;

	inv driver.GetTeam() <> nil and driver.GetCar() <> nil;
	  
operations
  public Performance : Driver ==> Performance
		Performance(driver0) == (
			driver := driver0;
		  return self;
		)
		post driver = driver0;
	
	pure public GetDriver: () ==> [Driver]
		GetDriver() ==
		  return driver
		post RESULT = driver;		
		
	pure public GetAverageSpeed: () ==> real
		GetAverageSpeed() ==
		  return averageSpeed
		post RESULT = averageSpeed;
		
		public SetAverageSpeed: real ==> ()
		SetAverageSpeed(avg) ==
		  averageSpeed := avg
		post avg = averageSpeed;
		
	pure public GetTime: () ==> real
		GetTime() ==
		  return time
		post RESULT = time;
		
	public SetTime: real ==> ()
		SetTime(t) ==
		  time := t
		post t = time;
		
	pure public GetPenalty: () ==> nat
		GetPenalty() ==
		  return penalty
		post RESULT = penalty;
	
	public SetPenalty: nat ==> ()
		SetPenalty(p) ==
		  penalty := p
		post p = penalty;

functions
	public static Compare: Performance * Performance -> int
		Compare(p1, p2) ==
			if p1.time > p2.time then 1 else -1
		pre p1.time > 0 and p2.time > 0;

end Performance
